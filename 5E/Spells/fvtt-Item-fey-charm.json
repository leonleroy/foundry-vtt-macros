{
  "name": "Fey Charm",
  "type": "feat",
  "img": "icons/consumables/plants/leaf-veins-glowing-green.webp",
  "data": {
    "description": {
      "value": "<section class=\"secret\">\n<p>The creature targets one humanoid or beast that she can see within 30 feet of her. If the target can see the {creature}, it must succeed on a <strong>DC 14 Wisdom</strong> saving throw or be magically charmed.</p>\n<p>The charmed creature regards the creature as a trusted friend to be heeded and protected. Although the target isn't under the creature's control, it takes the creature's requests or actions in the most favorable way it can.Each time the creature or its allies do anything harmful to the target, it can repeat the saving throw, ending the effect on itself on a success. Otherwise, the effect lasts 24 hours or until the creature dies, is on a different plane of existence from the target, or ends the effect as a bonus action. If a target's saving throw is successful, the target is immune to the creature's Fey Charm for the next 24 hours. The creature can have no more than one humanoid and up to three beasts charmed at a time.</p>\n</section>\n<p>The creature targets one humanoid or beast that she can see within 30 feet of her. If the target can see the creature, it must make a <strong>Wisdom</strong> saving throw. Each time the creature or its allies do anything harmful to the target, it can repeat the saving throw.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": "one humanoid or beast"
    },
    "duration": {
      "value": 24,
      "units": "hour"
    },
    "target": {
      "value": 1,
      "width": null,
      "units": "spec",
      "type": ""
    },
    "range": {
      "value": 30,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": "",
      "type": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "wis",
    "actionType": "other",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": "",
      "value": ""
    },
    "formula": "",
    "save": {
      "ability": "wis",
      "dc": 14,
      "scaling": "flat",
      "value": ""
    },
    "requirements": "",
    "recharge": {
      "value": null,
      "charged": false
    },
    "time": {
      "value": "",
      "_deprecated": true
    },
    "damageType": {
      "value": "",
      "_deprecated": true
    },
    "attunement": null
  },
  "effects": [],
  "flags": {
    "core": {
      "sourceId": "Compendium.dnd5e.monsterfeatures.SGgVxdZbmsStfeGB"
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[preActiveEffects]ItemMacro"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Fey Charm",
          "type": "script",
          "author": "sGDyf0LH8KxxtfaW",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "let effectLabel = \"Charmed\";\nif (args[0].targets[0].actor.effects.find(e => e.data.label === effectLabel)) return ui.notifications.warn(`Target is already Charmed.`);\nif (args[0].targets[0].actor.effects.find(e => e.data.label === item.name + \" Immunity\")) return ui.notifications.warn(`Target is immune to ${item.name}.`);\n\nif ( args[0].failedSaves.length == 0)\n{\n\n        let Effect = {\n            label: item.name + \" Immunity\",\n            origin: item.uuid,\n            icon: item.data.img,\n            duration: {\n                \"seconds\": 3600 *24,\n                startTime: game.time.worldTime\n            }\n        };\n        await args[0].targets[0].actor.createEmbeddedDocuments(\"ActiveEffect\", [Effect]);\n}\nelse\n{\n\n        await game.dfreds.effectInterface.toggleEffect(effectLabel, {\n            uuids: [args[0].hitTargetUuids[0]]\n        });\n        let effect = args[0].targets[0].actor.effects.find(e => e.data.label === effectLabel);\n        await args[0].targets[0].actor.updateEmbeddedDocuments(\"ActiveEffect\", [{\n            _id: effect.id,\n            disabled: effect.data.disabled,\n            duration: {\n                seconds: 3600 * 24\n            }\n        }]);\n\n\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "exportSource": {
      "world": "5etest",
      "system": "dnd5e",
      "coreVersion": "9.249",
      "systemVersion": "1.5.7"
    }
  }
}